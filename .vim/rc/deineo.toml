# [[plugins]]
# repo = 'zchee/deoplete-clang'
# on_ft = ['c', 'cpp']
#

[[plugins]]
repo = 'tweekmonster/deoplete-clang2'
on_ft = ['c', 'cpp']
hook_source = '''
  autocmd FileType c,cpp let b:clang2_orig_maps = {}
'''
[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'zchee/deoplete-go'
build = 'make'
on_i = 1
on_ft = 'go'

[[plugins]]
repo = 'zchee/deoplete-zsh'
on_ft = 'zsh'

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'sebastianmarkow/deoplete-rust'
on_ft = 'rust'
on_i = 1
hook_source = '''
  let g:deoplete#sources#rust#racer_binary='$HOME/.cargo/bin/racer'
  let g:deoplete#sources#rust#rust_source_path='/usr/local/src/rust/src'
  let g:deoplete#sources#rust#disable_keymap=1
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
if = "has('nvim')"
on_i = 1
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  source ~/.vim/rc/plugins/deoplete.rc.vim
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
on_cmd = 'Deol'
on_source = 'denite.nvim'
hook_add = '''
  nnoremap <silent> N :<C-u>call deol#new({'command': 'zsh'})<CR>
  nnoremap <silent> [Space]s :<C-u>Deol zsh<CR>
  nnoremap <silent> [Space]D  :<C-u>call deol#kill_editor()<CR>
'''
hook_source = '''
  let g:deol#prompt_pattern = '% \|%$'
  set shell=zsh
  " Set to $PATH.
  function! s:split_envpath(path) abort "{{{
    let delimiter = has('win32') ? ';' : ':'
    if stridx(a:path, '\' . delimiter) < 0
      return split(a:path, delimiter)
    endif
    let split = split(a:path, '\\\@<!\%(\\\\\)*\zs' . delimiter)
    return map(split,'substitute(v:val, ''\\\([\\'
          \ . delimiter . ']\)'', "\\1", "g")')
  endfunction"}}}
  function! s:join_envpath(list, orig_path, add_path) abort "{{{
    let delimiter = has('win32') ? ';' : ':'
    return (stridx(a:orig_path, '\' . delimiter) < 0
          \ && stridx(a:add_path, delimiter) < 0) ?
          \   join(a:list, delimiter) :
          \   join(map(copy(a:list),
          \        "substitute(v:path, ',\\|\\\\,\\@=', '\\\\\\0', 'g')"),
          \        delimiter)
  endfunction"}}}
  autocmd FileType deol call s:on_deol()
  function! s:on_deol() abort
    tnoremap <buffer><silent> <C-p> <Plug>(deol_previous_prompt)
    tnoremap <buffer><silent> <C-n> <Plug>(deol_next_prompt)
    nnoremap <buffer><silent> [Space]gc :<C-u>call deol#send('git commit')<CR>
    nnoremap <buffer><silent> [Space]gs :<C-u>call deol#send('git status')<CR>
    nnoremap <buffer><silent> [Space]gA :<C-u>call deol#send('git commit --amend')<CR>
  endfunction
'''
