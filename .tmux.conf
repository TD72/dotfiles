#===============================
# General Config
#===============================
# setw -g utf8 on
# set -g status-utf8 on

# shorter delay-time on key-stroke
set -sg escape-time 0

# -r 
set -g repeat-time 1000

# 256 clors
set -g default-terminal "xterm-256color"
# set -g default-terminal screen-256color
set -g terminal-overrides "term:colors=256"
set -s escape-time 0
set -g display-time 2000

set-option -g allow-rename off
set-option -g set-titles on
set-option -g set-titles-string "[tmux] #T @ #H"
#
set-option -g history-limit 30000

# closing window, tighter window number
set-option -g renumber-windows on

#===============================
# Powerline Settings
#===============================
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"

set-option -g pane-border-fg colour130
set-option -g pane-active-border-fg colour000
# set-option -g pane-active-border-bg colour130
#
#===============================
# Key Bind
#===============================
# unset old prefix key
unbind-key C-b
# new prefix key will set later, each OS
%if #{==:#{PLATFORM}, osx}
set -g prefix C-o
%endif
%if #{==:#{PLATFORM}, linux}
set -g prefix C-t
%endif

# config file reload
unbind r
bind-key r source-file ~/.tmux.conf \; display-message "Reload Config!!"

#---------------
# Window
#---------------
# Start Number of Window and Pane is 1. (default is 0)
set-option -g base-index 1
set-window-option -g pane-base-index 1

bind o rotate-window

bind c new-window -c "#{pane_current_path}"
bind s split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"

bind -r C-n select-window -t :-
bind -r C-p select-window -t :+

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h resize-pane -L
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-l resize-pane -R

bind-key C-q kill-session


bind-key m command-prompt -p "Man:" "split-window 'man %%'"

#---------------
# Copy Mode
#---------------
set-window-option -g mode-keys vi

bind y copy-mode \; display "Copy Mode!"
bind -T copy-mode-vi Y copy-line
# bind p paste-buffer
bind -T copy-mode-vi Escape clear-selection
bind -T copy-mode-vi C-c cancel
bind -T copy-mode-vi Space begin-selection
bind -T copy-mode-vi C-v rectangle-toggle
bind -T copy-mode-vi V select-line
bind -T copy-mode-vi C-a start-of-line
bind -T copy-mode-vi C-e end-of-line
bind -T copy-mode-vi w next-word
bind -T copy-mode-vi e next-word-end
bind -T copy-mode-vi b previous-word
bind -T copy-mode-vi g top-line
bind -T copy-mode-vi G bottom-line
bind -T copy-mode-vi / search-forward
bind -T copy-mode-vi ? search-backward
bind -T copy-mode-vi C-p page-up
bind -T copy-mode-vi C-n page-down


# enable mouse operation
set-option -g mouse on

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   halfpage-up
bind -T copy-mode-vi    C-WheelDownPane halfpage-down

# ClipBoard settings
# osx
%if #{==:#{PLATFORM}, osx}
bind -T copy-mode-vi y copy-pipe "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi Enter copy-pipe "reattach-to-user-namespace pbcopy"
bind-key p paste-buffer
set-option -g default-command "reattach-to-user-namespace -l $SHELL"
%endif
# linux
%if #{==:#{PLATFORM}, linux}
bind -T copy-mode-vi y copy-pipe "cat |  xsel -i --clipboard"
bind p if-shell 'xsel -b -o > ~/.tmux-buffer' \
'load-buffer ~/.tmux-buffer ; paste-buffer'
%endif

#===============================
# Plugin Manager tpm
#===============================
if-shell "[[ ! -d $HOME/.tmux/plugins/tpm ]]" \
"run 'mkdir -p ~/.tmux && git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm'"

run-shell '~/.tmux/plugins/tpm/tpm'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-copycat'

# Restore Session
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'ssh'

# Powerline  settings
if-shell "! which powerline-daemon" \
"run 'pip install git+git://github.com/powerline/powerline'"
run-shell 'powerline-daemon -q'
